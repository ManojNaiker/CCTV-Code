{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e4b57751-3a41-4b1f-91b0-4577acbe1b45",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "üîê Logging into light_gujarat\n",
      "‚ùå light_gujarat: Login failed: Message: \n",
      "Stacktrace:\n",
      "\tGetHandleVerifier [0x0108FC53+61635]\n",
      "\tGetHandleVerifier [0x0108FC94+61700]\n",
      "\t(No symbol) [0x00EB05D3]\n",
      "\t(No symbol) [0x00EF899E]\n",
      "\t(No symbol) [0x00EF8D3B]\n",
      "\t(No symbol) [0x00F40E12]\n",
      "\t(No symbol) [0x00F1D2E4]\n",
      "\t(No symbol) [0x00F3E61B]\n",
      "\t(No symbol) [0x00F1D096]\n",
      "\t(No symbol) [0x00EEC840]\n",
      "\t(No symbol) [0x00EED6A4]\n",
      "\tGetHandleVerifier [0x01314573+2701795]\n",
      "\tGetHandleVerifier [0x0130FCF6+2683238]\n",
      "\tGetHandleVerifier [0x0132AA3E+2793134]\n",
      "\tGetHandleVerifier [0x010A6915+155013]\n",
      "\tGetHandleVerifier [0x010ACFFD+181357]\n",
      "\tGetHandleVerifier [0x010974A8+92440]\n",
      "\tGetHandleVerifier [0x01097650+92864]\n",
      "\tGetHandleVerifier [0x01082040+5296]\n",
      "\tBaseThreadInitThunk [0x772DFCC9+25]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x7742827E+238]\n",
      "\n",
      "\n",
      "üîê Logging into light_haryana\n",
      "‚ùå light_haryana: Login failed: Message: \n",
      "Stacktrace:\n",
      "\tGetHandleVerifier [0x0108FC53+61635]\n",
      "\tGetHandleVerifier [0x0108FC94+61700]\n",
      "\t(No symbol) [0x00EB05D3]\n",
      "\t(No symbol) [0x00EF899E]\n",
      "\t(No symbol) [0x00EF8D3B]\n",
      "\t(No symbol) [0x00F40E12]\n",
      "\t(No symbol) [0x00F1D2E4]\n",
      "\t(No symbol) [0x00F3E61B]\n",
      "\t(No symbol) [0x00F1D096]\n",
      "\t(No symbol) [0x00EEC840]\n",
      "\t(No symbol) [0x00EED6A4]\n",
      "\tGetHandleVerifier [0x01314573+2701795]\n",
      "\tGetHandleVerifier [0x0130FCF6+2683238]\n",
      "\tGetHandleVerifier [0x0132AA3E+2793134]\n",
      "\tGetHandleVerifier [0x010A6915+155013]\n",
      "\tGetHandleVerifier [0x010ACFFD+181357]\n",
      "\tGetHandleVerifier [0x010974A8+92440]\n",
      "\tGetHandleVerifier [0x01097650+92864]\n",
      "\tGetHandleVerifier [0x01082040+5296]\n",
      "\tBaseThreadInitThunk [0x772DFCC9+25]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x7742827E+238]\n",
      "\n",
      "\n",
      "üîê Logging into light_odisha\n",
      "‚ùå light_odisha: Login failed: Message: \n",
      "Stacktrace:\n",
      "\tGetHandleVerifier [0x0108FC53+61635]\n",
      "\tGetHandleVerifier [0x0108FC94+61700]\n",
      "\t(No symbol) [0x00EB05D3]\n",
      "\t(No symbol) [0x00EF899E]\n",
      "\t(No symbol) [0x00EF8D3B]\n",
      "\t(No symbol) [0x00F40E12]\n",
      "\t(No symbol) [0x00F1D2E4]\n",
      "\t(No symbol) [0x00F3E61B]\n",
      "\t(No symbol) [0x00F1D096]\n",
      "\t(No symbol) [0x00EEC840]\n",
      "\t(No symbol) [0x00EED6A4]\n",
      "\tGetHandleVerifier [0x01314573+2701795]\n",
      "\tGetHandleVerifier [0x0130FCF6+2683238]\n",
      "\tGetHandleVerifier [0x0132AA3E+2793134]\n",
      "\tGetHandleVerifier [0x010A6915+155013]\n",
      "\tGetHandleVerifier [0x010ACFFD+181357]\n",
      "\tGetHandleVerifier [0x010974A8+92440]\n",
      "\tGetHandleVerifier [0x01097650+92864]\n",
      "\tGetHandleVerifier [0x01082040+5296]\n",
      "\tBaseThreadInitThunk [0x772DFCC9+25]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x7742827E+238]\n",
      "\n",
      "\n",
      "üîê Logging into light_himachal\n",
      "‚ùå light_himachal: Login failed: Message: \n",
      "Stacktrace:\n",
      "\tGetHandleVerifier [0x0108FC53+61635]\n",
      "\tGetHandleVerifier [0x0108FC94+61700]\n",
      "\t(No symbol) [0x00EB05D3]\n",
      "\t(No symbol) [0x00EF899E]\n",
      "\t(No symbol) [0x00EF8D3B]\n",
      "\t(No symbol) [0x00F40E12]\n",
      "\t(No symbol) [0x00F1D2E4]\n",
      "\t(No symbol) [0x00F3E61B]\n",
      "\t(No symbol) [0x00F1D096]\n",
      "\t(No symbol) [0x00EEC840]\n",
      "\t(No symbol) [0x00EED6A4]\n",
      "\tGetHandleVerifier [0x01314573+2701795]\n",
      "\tGetHandleVerifier [0x0130FCF6+2683238]\n",
      "\tGetHandleVerifier [0x0132AA3E+2793134]\n",
      "\tGetHandleVerifier [0x010A6915+155013]\n",
      "\tGetHandleVerifier [0x010ACFFD+181357]\n",
      "\tGetHandleVerifier [0x010974A8+92440]\n",
      "\tGetHandleVerifier [0x01097650+92864]\n",
      "\tGetHandleVerifier [0x01082040+5296]\n",
      "\tBaseThreadInitThunk [0x772DFCC9+25]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x7742827E+238]\n",
      "\n",
      "\n",
      "üîê Logging into light_uttarakhand\n",
      "‚ùå light_uttarakhand: Login failed: Message: \n",
      "Stacktrace:\n",
      "\tGetHandleVerifier [0x0108FC53+61635]\n",
      "\tGetHandleVerifier [0x0108FC94+61700]\n",
      "\t(No symbol) [0x00EB05D3]\n",
      "\t(No symbol) [0x00EF899E]\n",
      "\t(No symbol) [0x00EF8D3B]\n",
      "\t(No symbol) [0x00F40E12]\n",
      "\t(No symbol) [0x00F1D2E4]\n",
      "\t(No symbol) [0x00F3E61B]\n",
      "\t(No symbol) [0x00F1D096]\n",
      "\t(No symbol) [0x00EEC840]\n",
      "\t(No symbol) [0x00EED6A4]\n",
      "\tGetHandleVerifier [0x01314573+2701795]\n",
      "\tGetHandleVerifier [0x0130FCF6+2683238]\n",
      "\tGetHandleVerifier [0x0132AA3E+2793134]\n",
      "\tGetHandleVerifier [0x010A6915+155013]\n",
      "\tGetHandleVerifier [0x010ACFFD+181357]\n",
      "\tGetHandleVerifier [0x010974A8+92440]\n",
      "\tGetHandleVerifier [0x01097650+92864]\n",
      "\tGetHandleVerifier [0x01082040+5296]\n",
      "\tBaseThreadInitThunk [0x772DFCC9+25]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x7742827E+238]\n",
      "\n",
      "\n",
      "üîê Logging into light_uttarpradesh\n",
      "‚ùå light_uttarpradesh: Login failed: Message: \n",
      "Stacktrace:\n",
      "\tGetHandleVerifier [0x0108FC53+61635]\n",
      "\tGetHandleVerifier [0x0108FC94+61700]\n",
      "\t(No symbol) [0x00EB05D3]\n",
      "\t(No symbol) [0x00EF899E]\n",
      "\t(No symbol) [0x00EF8D3B]\n",
      "\t(No symbol) [0x00F40E12]\n",
      "\t(No symbol) [0x00F1D2E4]\n",
      "\t(No symbol) [0x00F3E61B]\n",
      "\t(No symbol) [0x00F1D096]\n",
      "\t(No symbol) [0x00EEC840]\n",
      "\t(No symbol) [0x00EED6A4]\n",
      "\tGetHandleVerifier [0x01314573+2701795]\n",
      "\tGetHandleVerifier [0x0130FCF6+2683238]\n",
      "\tGetHandleVerifier [0x0132AA3E+2793134]\n",
      "\tGetHandleVerifier [0x010A6915+155013]\n",
      "\tGetHandleVerifier [0x010ACFFD+181357]\n",
      "\tGetHandleVerifier [0x010974A8+92440]\n",
      "\tGetHandleVerifier [0x01097650+92864]\n",
      "\tGetHandleVerifier [0x01082040+5296]\n",
      "\tBaseThreadInitThunk [0x772DFCC9+25]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x7742827E+238]\n",
      "\n",
      "\n",
      "üîê Logging into light_madhyapradesh\n",
      "‚ùå light_madhyapradesh: Login failed: Message: \n",
      "Stacktrace:\n",
      "\tGetHandleVerifier [0x0108FC53+61635]\n",
      "\tGetHandleVerifier [0x0108FC94+61700]\n",
      "\t(No symbol) [0x00EB05D3]\n",
      "\t(No symbol) [0x00EF899E]\n",
      "\t(No symbol) [0x00EF8D3B]\n",
      "\t(No symbol) [0x00F40E12]\n",
      "\t(No symbol) [0x00F1D2E4]\n",
      "\t(No symbol) [0x00F3E61B]\n",
      "\t(No symbol) [0x00F1D096]\n",
      "\t(No symbol) [0x00EEC840]\n",
      "\t(No symbol) [0x00EED6A4]\n",
      "\tGetHandleVerifier [0x01314573+2701795]\n",
      "\tGetHandleVerifier [0x0130FCF6+2683238]\n",
      "\tGetHandleVerifier [0x0132AA3E+2793134]\n",
      "\tGetHandleVerifier [0x010A6915+155013]\n",
      "\tGetHandleVerifier [0x010ACFFD+181357]\n",
      "\tGetHandleVerifier [0x010974A8+92440]\n",
      "\tGetHandleVerifier [0x01097650+92864]\n",
      "\tGetHandleVerifier [0x01082040+5296]\n",
      "\tBaseThreadInitThunk [0x772DFCC9+25]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x7742827E+238]\n",
      "\n",
      "\n",
      "üîê Logging into light_jharkhand\n",
      "‚ùå light_jharkhand: Login failed: Message: \n",
      "Stacktrace:\n",
      "\tGetHandleVerifier [0x0108FC53+61635]\n",
      "\tGetHandleVerifier [0x0108FC94+61700]\n",
      "\t(No symbol) [0x00EB05D3]\n",
      "\t(No symbol) [0x00EF899E]\n",
      "\t(No symbol) [0x00EF8D3B]\n",
      "\t(No symbol) [0x00F40E12]\n",
      "\t(No symbol) [0x00F1D2E4]\n",
      "\t(No symbol) [0x00F3E61B]\n",
      "\t(No symbol) [0x00F1D096]\n",
      "\t(No symbol) [0x00EEC840]\n",
      "\t(No symbol) [0x00EED6A4]\n",
      "\tGetHandleVerifier [0x01314573+2701795]\n",
      "\tGetHandleVerifier [0x0130FCF6+2683238]\n",
      "\tGetHandleVerifier [0x0132AA3E+2793134]\n",
      "\tGetHandleVerifier [0x010A6915+155013]\n",
      "\tGetHandleVerifier [0x010ACFFD+181357]\n",
      "\tGetHandleVerifier [0x010974A8+92440]\n",
      "\tGetHandleVerifier [0x01097650+92864]\n",
      "\tGetHandleVerifier [0x01082040+5296]\n",
      "\tBaseThreadInitThunk [0x772DFCC9+25]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x7742827E+238]\n",
      "\n",
      "\n",
      "üîê Logging into light_rajasthan\n",
      "‚ùå light_rajasthan: Login failed: Message: \n",
      "Stacktrace:\n",
      "\tGetHandleVerifier [0x0108FC53+61635]\n",
      "\tGetHandleVerifier [0x0108FC94+61700]\n",
      "\t(No symbol) [0x00EB05D3]\n",
      "\t(No symbol) [0x00EF899E]\n",
      "\t(No symbol) [0x00EF8D3B]\n",
      "\t(No symbol) [0x00F40E12]\n",
      "\t(No symbol) [0x00F1D2E4]\n",
      "\t(No symbol) [0x00F3E61B]\n",
      "\t(No symbol) [0x00F1D096]\n",
      "\t(No symbol) [0x00EEC840]\n",
      "\t(No symbol) [0x00EED6A4]\n",
      "\tGetHandleVerifier [0x01314573+2701795]\n",
      "\tGetHandleVerifier [0x0130FCF6+2683238]\n",
      "\tGetHandleVerifier [0x0132AA3E+2793134]\n",
      "\tGetHandleVerifier [0x010A6915+155013]\n",
      "\tGetHandleVerifier [0x010ACFFD+181357]\n",
      "\tGetHandleVerifier [0x010974A8+92440]\n",
      "\tGetHandleVerifier [0x01097650+92864]\n",
      "\tGetHandleVerifier [0x01082040+5296]\n",
      "\tBaseThreadInitThunk [0x772DFCC9+25]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x774282AE+286]\n",
      "\tRtlGetAppContainerNamedObjectPath [0x7742827E+238]\n",
      "\n",
      "‚úÖ Excel updated.\n",
      "‚úÖ No offline branches. No email sent.\n",
      "üìß High-priority email sent successfully to multiple recipients.\n"
     ]
    }
   ],
   "source": [
    "from selenium import webdriver\n",
    "from selenium.webdriver.chrome.service import Service\n",
    "from selenium.webdriver.chrome.options import Options\n",
    "from selenium.webdriver.common.by import By\n",
    "from selenium.webdriver.common.keys import Keys\n",
    "from selenium.webdriver.support.ui import WebDriverWait\n",
    "from selenium.webdriver.support import expected_conditions as EC\n",
    "from openpyxl import load_workbook\n",
    "from webdriver_manager.chrome import ChromeDriverManager\n",
    "from email.mime.text import MIMEText\n",
    "from email.mime.multipart import MIMEMultipart\n",
    "import smtplib\n",
    "import time\n",
    "\n",
    "# Account credentials and associated state\n",
    "accounts = [\n",
    "    {\"username\": \"light_gujarat\", \"password\": \"L!ght##Guj$2023#$@\", \"state\": \"Gujarat\"},\n",
    "    {\"username\": \"light_haryana\", \"password\": \"L!ght$$2023##Hary@n@\", \"state\": \"Haryana\"},\n",
    "    {\"username\": \"light_odisha\", \"password\": \"Od!$h@2025@$#\", \"state\": \"Odisha\"},\n",
    "    {\"username\": \"light_himachal\", \"password\": \"H!m@#Branch#2548#$@\", \"state\": \"Himachal\"},\n",
    "    {\"username\": \"light_uttarakhand\", \"password\": \"Utt@ra#br@nch#2658#$\", \"state\": \"Uttarakhand\"},\n",
    "    {\"username\": \"light_uttarpradesh\", \"password\": \"Utt@r#2054#$@Branch\", \"state\": \"Uttarpradesh\"},\n",
    "    {\"username\": \"light_madhyapradesh\", \"password\": \"M@dhy@258@$Br@nch\", \"state\": \"Madhyapradesh\"},\n",
    "    {\"username\": \"light_jharkhand\", \"password\": \"Jh@rkh@nd#2025@$#\", \"state\": \"Jharkhand\"},\n",
    "    {\"username\": \"light_rajasthan\", \"password\": \"L!ght##2023CCTV$2023##\", \"state\": \"Rajasthan\"},\n",
    "]\n",
    "\n",
    "# Chrome Options\n",
    "chrome_options = Options()\n",
    "chrome_options.add_argument('--ignore-certificate-errors')\n",
    "chrome_options.add_argument('--disable-web-security')\n",
    "chrome_options.add_argument('--no-sandbox')\n",
    "chrome_options.add_argument('--disable-dev-shm-usage')\n",
    "chrome_options.add_argument('--start-maximized')\n",
    "# chrome_options.add_argument('--headless')  # Enable this for background run\n",
    "\n",
    "def click_load_more(driver, username):\n",
    "    while True:\n",
    "        try:\n",
    "            load_more = WebDriverWait(driver, 5).until(\n",
    "                EC.element_to_be_clickable((By.XPATH, \"//span[text()='Load More']/..\"))\n",
    "            )\n",
    "            driver.execute_script(\"arguments[0].scrollIntoView(true);\", load_more)\n",
    "            time.sleep(1)\n",
    "            load_more.click()\n",
    "            print(f\"üîÑ {username}: Clicked 'Load More'\")\n",
    "            time.sleep(2)\n",
    "        except:\n",
    "            print(f\"‚ÑπÔ∏è {username}: No more 'Load More' button.\")\n",
    "            break\n",
    "\n",
    "def extract_account_data(username, password, state):\n",
    "    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=chrome_options)\n",
    "    driver.get(\"https://iindia.hik-connect.com/views/login/index.html#/login\")\n",
    "    \n",
    "    try:\n",
    "        WebDriverWait(driver, 15).until(EC.presence_of_element_located((By.ID, \"basic_account\")))\n",
    "        driver.find_element(By.ID, \"basic_account\").send_keys(username)\n",
    "        time.sleep(1)\n",
    "        driver.find_element(By.ID, \"basic_password\").send_keys(password)\n",
    "        driver.find_element(By.ID, \"basic_password\").send_keys(Keys.RETURN)\n",
    "    except Exception as e:\n",
    "        print(f\"‚ùå {username}: Login failed: {e}\")\n",
    "        driver.quit()\n",
    "        return []\n",
    "\n",
    "    time.sleep(5)\n",
    "\n",
    "    # Redirect for light_rajasthan\n",
    "    if username == \"light_rajasthan\":\n",
    "        driver.get(\"https://iindia.hik-connect.com/views/login/index.html#/common/personal/deviceManagement\")\n",
    "        print(f\"üîó {username}: Redirected to deviceManagement page\")\n",
    "        time.sleep(5)\n",
    "\n",
    "    # Close any popups\n",
    "    try:\n",
    "        close_buttons = driver.find_elements(By.CLASS_NAME, \"el-dialog__headerbtn\")\n",
    "        if close_buttons:\n",
    "            driver.execute_script(\"arguments[0].click();\", close_buttons[-1])\n",
    "            print(f\"‚úÖ {username}: Closed popup.\")\n",
    "    except Exception as e:\n",
    "        print(f\"‚ö†Ô∏è {username}: No popup or error closing popup: {e}\")\n",
    "\n",
    "    # Load all rows\n",
    "    click_load_more(driver, username)\n",
    "\n",
    "    # Extract device data\n",
    "    data = []\n",
    "    rows = driver.find_elements(By.XPATH, \"//div[@class='el-table__body-wrapper']//table//tbody/tr\")\n",
    "    print(f\"üìä {username}: Found {len(rows)} devices.\")\n",
    "    for row in rows:\n",
    "        cols = row.find_elements(By.TAG_NAME, \"td\")\n",
    "        if len(cols) >= 5:\n",
    "            alias = cols[0].text.strip()\n",
    "            status = cols[4].text.strip()\n",
    "            data.append((state, alias, status))\n",
    "            print(f\"‚úÖ {username}: {alias} - {status}\")\n",
    "\n",
    "    driver.quit()\n",
    "    return data\n",
    "\n",
    "# --- MAIN EXECUTION ---\n",
    "\n",
    "all_data = []\n",
    "for account in accounts:\n",
    "    print(f\"\\nüîê Logging into {account['username']}\")\n",
    "    data = extract_account_data(account[\"username\"], account[\"password\"], account[\"state\"])\n",
    "    all_data.extend(data)\n",
    "\n",
    "# Load Excel file\n",
    "file_path = r\"D:\\OneDrive - Light Microfinance Pvt Ltd\\List\\Python\\CCTV Report\\CCTV_Daily_Status.xlsx\"\n",
    "wb = load_workbook(file_path)\n",
    "ws = wb.active\n",
    "\n",
    "# Clear previous data from columns C, D, E\n",
    "for row in ws.iter_rows(min_row=2, min_col=3, max_col=5):\n",
    "    for cell in row:\n",
    "        cell.value = None\n",
    "\n",
    "# Write new data\n",
    "for i, (state, branch, status) in enumerate(all_data, start=2):\n",
    "    ws[f\"C{i}\"] = branch\n",
    "    ws[f\"D{i}\"] = status\n",
    "    ws[f\"E{i}\"] = state\n",
    "\n",
    "wb.save(file_path)\n",
    "print(\"‚úÖ Excel updated.\")\n",
    "\n",
    "# Collect offline branches\n",
    "offline_rows = [\n",
    "    (ws[f\"E{i}\"].value, ws[f\"C{i}\"].value, ws[f\"D{i}\"].value)\n",
    "    for i in range(2, ws.max_row + 1)\n",
    "    if ws[f\"D{i}\"].value and ws[f\"D{i}\"].value.lower() == \"offline\"\n",
    "]\n",
    "\n",
    "if not offline_rows:\n",
    "    print(\"‚úÖ No offline branches. No email sent.\")\n",
    "    exit()\n",
    "\n",
    "# Email setup\n",
    "try:\n",
    "    email_sheet = wb[\"email\"]\n",
    "    # Collect all non-empty email IDs from column A (To) and B (CC) starting from row 2\n",
    "    to_emails = [cell.value for cell in email_sheet[\"A\"][1:] if cell.value]\n",
    "    cc_emails = [cell.value for cell in email_sheet[\"B\"][1:] if cell.value]\n",
    "    if not to_emails:\n",
    "        print(\"‚ùå No valid 'To' email IDs found.\")\n",
    "        exit()\n",
    "except:\n",
    "    print(\"‚ùå Email sheet not found or email IDs missing.\")\n",
    "    exit()\n",
    "\n",
    "# Email content\n",
    "table_rows = \"\".join([f\"<tr><td>{s}</td><td>{b}</td><td>{st}</td></tr>\" for s, b, st in offline_rows])\n",
    "email_body = f\"\"\"\n",
    "<p>Dear Branch Team,</p>\n",
    "<p>Please find below the CCTV status of your branches; kindly check the internet cable or contact the IT team.</p>\n",
    "<p>‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•Ä ‡§∂‡§æ‡§ñ‡§æ‡§ì‡§Ç ‡§ï‡•Ä ‡§∏‡•Ä‡§∏‡•Ä‡§ü‡•Ä‡§µ‡•Ä ‡§∏‡•ç‡§•‡§ø‡§§‡§ø ‡§¶‡•á‡§ñ‡•á‡§Ç; ‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡§æ ‡§á‡§Ç‡§ü‡§∞‡§®‡•á‡§ü ‡§ï‡•á‡§¨‡§≤ ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç ‡§Ø‡§æ IT ‡§ü‡•Ä‡§Æ ‡§∏‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç‡•§</p>\n",
    "<p>‡™ï‡´É‡™™‡™æ ‡™ï‡™∞‡´Ä‡™®‡´á ‡™§‡™Æ‡™æ‡™∞‡´Ä ‡™∂‡™æ‡™ñ‡™æ‡™ì‡™®‡´Ä ‡™∏‡´Ä‡™∏‡´Ä‡™ü‡´Ä‡™µ‡´Ä ‡™∏‡´ç‡™•‡™ø‡™§‡™ø ‡™ú‡´Å‡™ì ‡™Ö‡™®‡´á ‡™ú‡™∞‡´Ç‡™∞ ‡™™‡™°‡´á ‡™§‡´ã IT ‡™ü‡´Ä‡™Æ‡™®‡´ã ‡™∏‡™Ç‡™™‡™∞‡´ç‡™ï ‡™ï‡™∞‡´ã.</p>\n",
    "\n",
    "<p>Dear RM's,</p>\n",
    "<p>The CCTV cameras at the following branches are offline. Please coordinate with your BMs to resolve the issue soon.</p>\n",
    "<p>‡§®‡§ø‡§Æ‡•ç‡§®‡§≤‡§ø‡§ñ‡§ø‡§§ ‡§∂‡§æ‡§ñ‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§∏‡•Ä‡§∏‡•Ä‡§ü‡•Ä‡§µ‡•Ä ‡§ï‡•à‡§Æ‡§∞‡•á ‡§ë‡§´‡§º‡§≤‡§æ‡§á‡§® ‡§¶‡§ø‡§ñ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç; ‡§ï‡•É‡§™‡§Ø‡§æ ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§ï‡•ã ‡§Ø‡§•‡§æ‡§∂‡•Ä‡§ò‡•ç‡§∞ ‡§π‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§™‡§®‡•Ä ‡§∂‡§æ‡§ñ‡§æ ‡§ï‡•á ‡§¨‡•Ä‡§è‡§Æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§Æ‡§®‡•ç‡§µ‡§Ø ‡§ï‡§∞‡•á‡§Ç‡•§ </p>\n",
    "<p>‡™®‡´Ä‡™ö‡´á‡™®‡´Ä ‡™∂‡™æ‡™ñ‡™æ‡™ì ‡™™‡™∞‡™®‡™æ ‡™∏‡´Ä‡™∏‡´Ä‡™ü‡´Ä‡™µ‡´Ä ‡™ï‡´á‡™Æ‡´á‡™∞‡™æ ‡™ë‡™´‡™≤‡™æ‡™á‡™® ‡™§‡™∞‡´Ä‡™ï‡´á ‡™¶‡´á‡™ñ‡™æ‡™à ‡™∞‡™π‡´ç‡™Ø‡™æ ‡™õ‡´á; ‡™∂‡™ï‡´ç‡™Ø ‡™§‡´á‡™ü‡™≤‡´Ä ‡™µ‡™π‡´á‡™≤‡´Ä ‡™§‡™ï‡´á ‡™∏‡™Æ‡™∏‡´ç‡™Ø‡™æ‡™®‡´ã ‡™â‡™ï‡´á‡™≤ ‡™≤‡™æ‡™µ‡™µ‡™æ ‡™Æ‡™æ‡™ü‡´á ‡™ï‡´É‡™™‡™æ ‡™ï‡™∞‡´Ä‡™®‡´á ‡™§‡™Æ‡™æ‡™∞‡´Ä ‡™∂‡™æ‡™ñ‡™æ BM ‡™∏‡™æ‡™•‡´á ‡™∏‡™Ç‡™ï‡™≤‡™® ‡™ï‡™∞‡´ã</p>\n",
    "\n",
    "<table border=\"1\" cellpadding=\"5\" cellspacing=\"0\">\n",
    "    <tr><th>State</th><th>Branch Name</th><th>Status</th></tr>\n",
    "    {table_rows}\n",
    "</table>\n",
    "\n",
    "<p>Thanks & Regards,<br>IT Team</p>\n",
    "\"\"\"\n",
    "\n",
    "# Compose and send email\n",
    "msg = MIMEMultipart()\n",
    "msg[\"From\"] = \"it@lightfinance.com\"\n",
    "msg[\"To\"] = \", \".join(to_emails)  # Join multiple To emails with commas\n",
    "msg[\"Cc\"] = \", \".join(cc_emails)  # Join multiple CC emails with commas\n",
    "msg[\"Subject\"] = \"Branches CCTV Offline Status\"\n",
    "msg[\"X-Priority\"] = \"1\"  # High priority\n",
    "msg[\"Importance\"] = \"High\"  # High importance\n",
    "msg.attach(MIMEText(email_body, \"html\"))\n",
    "\n",
    "smtp_server = \"mail.lightfinance.com\"\n",
    "smtp_user = \"it@lightfinance.com\"\n",
    "smtp_pass = \"L!m@F#I1689\"\n",
    "\n",
    "with smtplib.SMTP(smtp_server, 587) as server:\n",
    "    server.starttls()\n",
    "    server.login(smtp_user, smtp_pass)\n",
    "    # Send email to all To and CC recipients\n",
    "    server.sendmail(smtp_user, to_emails + cc_emails, msg.as_string())\n",
    "\n",
    "print(\"üìß High-priority email sent successfully to multiple recipients.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e554cd8f-465f-435d-938c-a6b35f6456dd",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
